/*Native to C
Create a Boolean type*/

#define BOOL char
#define FALSE 0
#define TRUE 1

/* Operators 
=    (asigment)
==   (comparison)
!=
+=
*=
%    (module or remainder)
++
--
a += 1
a -= 1
Ternary if -)    (condition)? TrueValue : FalseValue


Structures*/

struct point {
    int x;
    int y;
}

struct point p;
p.x = 10;
p.y = 5;

/*Or you can typedef the structure and omit the struct command later*/

typedef struct {
    int x;
    int y;
} point;

point p;
p.x = 10;
p.y = 5;


 switch( Grade )
 {
    case 'A' : printf( "Excellent\n" );
               break;
    case 'B' : printf( "Good\n" );
               break;
    case 'C' : printf( "OK\n" );
               break;
    case 'D' : printf( "Mmmmm....\n" );
               break;
    case 'F' : printf( "You must do better than this\n" );
               break;
    default  : printf( "What is your grade anyway?\n" );
               break;
 }



#include <stdio.h>  /*---------------------------------------------------------------------*/

printf("%s\n", "Done!")               /* es.wikipedia.org/wiki/Printf */
strncmp(name, "John Boe", 100)        /* www.tutorialspoint.com/ansi_c/c_strncmp.htm */

#include <string.h>  /*---------------------------------------------------------------------*/

char *strcpy(char *dest, const char *src);  /*www.tutorialspoint.com/c_standard_library/c_function_strcpy.htm */
void *memset(void *str, int c, size_t n);   /* http://www.tutorialspoint.com/c_standard_library/c_function_memset.htm*/
